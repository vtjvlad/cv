const { TelegramClient } = require("telegram");
const { StringSession } = require("telegram/sessions");
const { Api } = require("telegram");
const input = require("input");
const fs = require('fs');
require("dotenv").config();

// üîê –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ
// const apiId = parseInt(process.env.TG_API_ID);
// const apiHash = process.env.TG_API_HASH;


const apiId = 21467664; // –í–∞—à API import {} from ''
const apiHash = "7920513630aa4ddbcee017465e3c65b8"; // –í–∞—à API Hashhj

const stringSession = new StringSession(""); // –µ—Å–ª–∏ —Å–µ—Å—Å–∏—è –µ—Å—Ç—å ‚Äî –≤—Å—Ç–∞–≤—å—Ç–µ —Å—é–¥–∞

(async () => {
  const client = new TelegramClient(stringSession, apiId, apiHash, {
    connectionRetries: 5,
  });

  await client.start({
    phoneNumber: async () => await input.text("üì± –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: "),
    password: async () => await input.text("üîë –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å (–µ—Å–ª–∏ –µ—Å—Ç—å): "),
    phoneCode: async () => await input.text("üì® –í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∏–∑ Telegram: "),
    onError: (err) => console.log(err),
  });

  console.log("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞");
  console.log("üíæ –°–µ—Å—Å–∏—è:", client.session.save());

  // üì¢ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞
  const result = await client.invoke(
    new Api.channels.CreateChannel({
        title: "Fendi",
      about: "",
      megagroup: false, // false = –∫–∞–Ω–∞–ª
    })
  );

  // üÜî –ü–æ–ª—É—á–µ–Ω–∏–µ ID –Ω–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞
  const channel = result.chats[0];

  console.log(`üì¢ –ö–∞–Ω–∞–ª —Å–æ–∑–¥–∞–Ω: ${channel.title} (ID: ${channel.id})`);

  // üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–∞–Ω–∞–ª–µ –≤ —Ñ–∞–π–ª
  const channelInfo = `–ù–∞–∑–≤–∞–Ω–∏–µ: ${channel.title}, ID: ${channel.id}\n`;
  fs.appendFileSync('channels_info.txt', channelInfo, 'utf8');
  console.log('‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–∞–Ω–∞–ª–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ —Ñ–∞–π–ª channels_info.txt');

  // ‚úÖ –ü—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∞
  const rights = new Api.ChatAdminRights({
    changeInfo: false,
    postMessages: true,
    editMessages: true,
    deleteMessages: true,
    banUsers: false,
    inviteUsers: true,
    pinMessages: true,
    addAdmins: false,
    anonymous: false,
    manageCall: false,
    other: true,
  });

  // üë• Usernames –±–æ—Ç–æ–≤
  const botUsernames = [
    "cvpost1_bot",
    "cvpost2_bot",
    "cvpost3_bot",
    "cvpost4_bot",
    "cvpost5_bot",
    "cvpost6_bot",
    "cvpost7_bot",
    "cvpost8_bot",
    "cvpost9_bot",
    "cvpost10_bot",
    "cvpost11_bot",
    "cvpost12_bot",
    "cvpost13_bot",
    "cvpost14_bot",
    "cvpost15_bot",
    "cvpost16_bot",
    "cvpost17_bot",
    "cvpost18_bot",
    "cvpost19_bot",
    "cvpost20_bot",
    "cvpost21_bot",
    "cvpost22_bot",
    "cvpost23_bot",
    "cvpost24_bot",
    "cvpost25_bot",
    "cvpost26_bot",
    "cvpost27_bot",
    "cvpost28_bot",
    "cvpost29_bot",
    "cvpost30_bot",
    "cvpost31_bot",
    "cvpost32_bot",
    "cvpost33_bot",
    "cvpost34_bot",
    "cvpost35_bot",
    "cvpost36_bot",
    "cvpost37_bot", 
    "cvpost38_bot",
    "cvpost39_bot",
    "cvpost40_bot"
    // –î–æ–±–∞–≤—å —Å—é–¥–∞ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö
  ];

  // üëÆ‚Äç‚ôÇÔ∏è –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –∞–¥–º–∏–Ω–æ–≤
  for (const username of botUsernames) {
    try {
      const botEntity = await client.getEntity(username);
      await client.invoke(
        new Api.channels.EditAdmin({
          channel: channel,
          userId: botEntity,
          adminRights: rights,
          rank: "Bot",
        })
      );
      console.log(`‚úÖ –ù–∞–∑–Ω–∞—á–µ–Ω –∞–¥–º–∏–Ω–æ–º: ${username}`);
    } catch (e) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –¥–ª—è ${username}:`, e.message);
    }
  }

  console.log("üèÅ –ì–æ—Ç–æ–≤–æ.");
  process.exit(0);
})();
