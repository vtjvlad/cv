function convertPrice(code) {
    // –ò–∑–≤–ª–µ–∫–∞–µ–º pXXX –∏–∑ —Å—Ç—Ä–æ–∫–∏
const match =  code.match(/\bp\s*(\d{3})\w*/) || code.match(/\bpp\s*(\d{3})\w*/) || code.match(/\bp\s*(\d{3})\s*üí∞/);
    if (!match) {
        return null; // –ï—Å–ª–∏ pXXX –Ω–µ –Ω–∞–π–¥–µ–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º null
    }
    
    const num = parseInt(match[1], 10); // –ü–æ–ª—É—á–∞–µ–º —á–∏—Å–ª–æ XXX
    
    // –ü—Ä–∏–º–µ—Ä –¥–∏–∞–ø–∞–∑–æ–Ω–æ–≤ –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è
    const priceRanges = [
        { min: 102, max: 131, value: 2000 },  
        { min: 132, max: 141, value: 2000 },
        { min: 142, max: 151, value: 2100 },
        { min: 152, max: 171, value: 2200 },
        { min: 172, max: 181, value: 2200 },
        { min: 182, max: 191, value: 2500 },
        { min: 192, max: 201, value: 2600 },
        { min: 202, max: 211, value: 2700 },
        { min: 202, max: 221, value: 2800 },
        { min: 222, max: 231, value: 2800 },
        { min: 232, max: 241, value: 2900 },
        { min: 242, max: 251, value: 3000 },
        { min: 252, max: 261, value: 3000 },
        { min: 262, max: 271, value: 3200 },
        { min: 272, max: 281, value: 3500 },
        { min: 282, max: 351, value: 3800 },
        { min: 352, max: 361, value: 3500 },
        { min: 362, max: 401, value: 3800 } 
        // –î–æ–±–∞–≤—å—Ç–µ —Å–≤–æ–∏ –¥–∏–∞–ø–∞–∑–æ–Ω—ã –∑–¥–µ—Å—å
    ];
    
    // –ò—â–µ–º –ø–æ–¥—Ö–æ–¥—è—â–∏–π –¥–∏–∞–ø–∞–∑–æ–Ω
    for (const range of priceRanges) {
        if (num >= range.min && num <= range.max) {
            return range.value;
        }
    }
    
    // –ï—Å–ª–∏ —á–∏—Å–ª–æ –Ω–µ –ø–æ–ø–∞–¥–∞–µ—Ç –≤ –¥–∏–∞–ø–∞–∑–æ–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º null (–∏–ª–∏ –º–æ–∂–Ω–æ –∑–∞–¥–∞—Ç—å —Ñ–æ—Ä–º—É–ª—É, –Ω–∞–ø—Ä–∏–º–µ—Ä, num * 10)
    return null;
}

function cleanTitle(title) {
    // –°–ø–∏—Å–æ–∫ –±—Ä–µ–Ω–¥–æ–≤ —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –Ω–∞–ø–∏—Å–∞–Ω–∏—è
    const brands = [
        { canonical: 'Louis Vuitton', variants: ['Louis Vuitton', 'LV', 'LouisVuitton'] },
        { canonical: 'Dior', variants: ['Dior', 'Christian Dior', 'ChristianDior'] },
        { canonical: 'Prada', variants: ['Prada', 'Prada Milano', 'PradaMilan'] },
        { canonical: 'Dolce & Gabbana', variants: ['Dolce & Gabbana', 'Dolce Gabbana', 'D&G', 'DolceGabbana'] },
        { canonical: 'Fendi', variants: ['Fendi', 'Fendi Roma', 'FendiRoma'] },
        { canonical: 'Brunello Cucinelli', variants: ['Brunello Cucinelli', 'Cucinelli', 'BrunelloCucinelli'] },
        { canonical: 'Ermenegildo Zegna', variants: ['Ermenegildo Zegna', 'Zegna', 'ErmenegildoZegna', 'EZegna'] },
        { canonical: 'Santoni', variants: ['Santoni', 'Santoni Shoes'] },
        { canonical: 'Tod‚Äôs', variants: ['Tod‚Äôs', 'Tods', 'Tod s', 'Tod'] },
        { canonical: 'Bottega Veneta', variants: ['Bottega Veneta', 'Bottega', 'BottegaVeneta', 'BV'] },
        { canonical: 'Balenciaga', variants: ['Balenciaga', 'Balenci'] },
        { canonical: 'Gucci', variants: ['Gucci', 'Gucci Italy'] },
        { canonical: 'Versace', variants: ['Versace', 'Gianni Versace', 'Versace Italy'] },
        { canonical: 'Herm√®s', variants: ['Herm√®s', 'Hermes', 'Hermes Paris'] },
        { canonical: 'Alexander McQueen', variants: ['Alexander McQueen', 'McQueen', 'AlexanderMcQueen'] },
        { canonical: 'Valentino', variants: ['Valentino', 'Valentino Garavani', 'ValentinoGaravani'] },
        { canonical: 'Philipp Plein', variants: ['Philipp Plein', 'Plein', 'PhilippPlein'] },
        { canonical: 'Amiri', variants: ['Amiri', 'Amiri LA'] },
        { canonical: 'Off-White', variants: ['Off-White', 'Off White', 'OffWhite'] },
        { canonical: 'Boss', variants: ['Boss', 'Hugo Boss', 'HugoBoss'] }
    ];
    
    // –ü—Ä–∏–≤–æ–¥–∏–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É –¥–ª—è –ø–æ–∏—Å–∫–∞
    const lowerTitle = title.toLowerCase();
    
    // –ò—â–µ–º –±—Ä–µ–Ω–¥
    for (const brand of brands) {
        for (const variant of brand.variants) {
            if (lowerTitle.includes(variant.toLowerCase())) {
                return brand.canonical; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–∞–Ω–æ–Ω–∏—á–µ—Å–∫–æ–µ –Ω–∞–ø–∏—Å–∞–Ω–∏–µ –±—Ä–µ–Ω–¥–∞
            }
        }
    }
    
    // –ï—Å–ª–∏ –±—Ä–µ–Ω–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω, –æ—á–∏—â–∞–µ–º —Å—Ç—Ä–æ–∫—É: –æ—Å—Ç–∞–≤–ª—è–µ–º –ª–∞—Ç–∏–Ω—Å–∫–∏–µ –±—É–∫–≤—ã, —Ü–∏—Ñ—Ä—ã, –ø—Ä–æ–±–µ–ª—ã, –¥–µ—Ñ–∏—Å –∏ –∞–ø–æ—Å—Ç—Ä–æ—Ñ
    return title.replace(/[^\w\s-'‚Äô]/g, '').trim().replace(/\s+/g, ' ');
}

function processJson(jsonData) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ jsonData –º–∞—Å—Å–∏–≤–æ–º
    if (!Array.isArray(jsonData)) {
        throw new Error('–í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –º–∞—Å—Å–∏–≤–æ–º –æ–±—ä–µ–∫—Ç–æ–≤');
    }

    return jsonData.map(item => {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–æ–ª—è title
        if (!item.title) {
            console.warn('–ü—Ä–æ–ø—É—â–µ–Ω–æ –ø–æ–ª–µ title –≤ –æ–±—ä–µ–∫—Ç–µ:', item);
            return item;
        }
        
        // –ò–∑–≤–ª–µ–∫–∞–µ–º —Ü–µ–Ω—É
        const price = convertPrice(item.title);
        
        return {
            ...item, // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ –ø–æ–ª—è –æ–±—ä–µ–∫—Ç–∞, –≤–∫–ª—é—á–∞—è imgsSrc
            title: cleanTitle(item.title), // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º title
            prc: price // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –∫–ª—é—á prc
        };
    });
}

// –ß—Ç–µ–Ω–∏–µ –∏ –∑–∞–ø–∏—Å—å —Ñ–∞–π–ª–∞
const fs = require('fs');


fs.readFile('output.json', 'utf8', (err, data) => {
    // fs.readFile('./china_extracted.json', 'utf8', (err, data) => {
    if (err) {
        console.error('–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞:', err);
        return;
    }

    try {
        const jsonData = JSON.parse(data);
        const cleanedData = processJson(jsonData);

        // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        fs.writeFile('input.json', JSON.stringify(cleanedData, null, 2), 'utf8', err => {
            if (err) {
                console.error('–û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ —Ñ–∞–π–ª–∞:', err);
                return;
            }
            console.log('–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –∫–∞–∫ output.json');
        });
    } catch (err) {
        console.error('–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON –∏–ª–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', err);
    }
});
