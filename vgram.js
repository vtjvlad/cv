const { TelegramClient } = require("telegram");
const { StringSession } = require("telegram/sessions");
const { Api } = require("telegram");
const input = require("input"); // npm install input
const { botUsernames, rights } = require("./botsIds"); // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–∞—Å—Å–∏–≤ usernames –∏ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∞
require("dotenv").config(); // –ü–æ–¥–∫–ª—é—á–∞–µ–º dotenv –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è
const apiId = parseInt(process.env.TG_API_ID); // –í–∞—à api_id –∏–∑ .env
const apiHash = process.env.TG_API_HASH; // –í–∞—à api_hash –∏–∑ .env ‚Äî —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π
const stringSession = new StringSession(""); // –û—Å—Ç–∞–≤—å –ø—É—Å—Ç—ã–º ‚Äî –±—É–¥–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è

(async () => {
  console.log("‚öôÔ∏è –ó–∞–ø—É—Å–∫ –∫–ª–∏–µ–Ω—Ç–∞...");
  const client = new TelegramClient(stringSession, apiId, apiHash, {
    connectionRetries: 5,
  });

  await client.start({
    phoneNumber: async () => await input.text("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: "),
    password: async () => await input.text("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å (–µ—Å–ª–∏ –µ—Å—Ç—å): "),
    phoneCode: async () => await input.text("–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∏–∑ Telegram: "),
    onError: (err) => console.log(err),
  });

  console.log("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞");
  console.log("üîê StringSession:", client.session.save());

  const channel = await client.getEntity("-1002663136097");

  // –°–ø–∏—Å–æ–∫ Telegram user ID –±–æ—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã—Ö –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏
  // const botIds = [
  //       7257688804,
  //       7257688804,
  //       7829123830,
  //       7829123830,
  //       7550848039,
  //       7452746477,
  //       7914845816,
  //       7902024999,
  //       7237978674,
  //       7572822687,
  //       7937730457,
  //       7397948790,
  //       7480072176,
  //       7415074085,
  //       7779053478,
  //       7909597355,
  //       8015366004,
  //       7791463840,
  //       8176820074,
  //       8157076011,
  //       7545082880,
  //       7959965675,
  //       7457670542,
  //       8118702500,
  //       8073490159,
  //       7649262799,
  //       8012001469,
  //       7454861052,
  //       7730050177
  // ];
//
// const botUsernames = [ "cvpost1_bot","cvpost2_bot","cvpost3_bot","cvpost4_bot","cvpost5_bot","cvpost6_bot","cvpost7_bot","cvpost8_bot","cvpost9_bot","cvpost10_bot","cvpost11_bot","cvpost12_bot","cvpost13_bot","cvpost14_bot","cvpost15_bot","cvpost16_bot","cvpost17_bot","cvpost18_bot","cvpost19_bot","cvpost20_bot","cvpost21_bot","cvpost22_bot","cvpost23_bot","cvpost24_bot","cvpost25_bot","cvpost26_bot","cvpost27_bot","cvpost28_bot","cvpost29_bot","cvpost30_bot"
// ];
//
//     const rights = new Api.ChatAdminRights({
//     changeInfo: false,
//     postMessages: true,
//     editMessages: true,
//     deleteMessages: true,
//     banUsers: false,
//     inviteUsers: true,
//     pinMessages: true,
//     addAdmins: false,
//     anonymous: false,
//     manageCall: false,
//     other: true,
//   });

for (const username of botUsernames) {
  try {
    const botEntity = await client.getEntity(username);
    await client.invoke(
      new Api.channels.EditAdmin({
        channel: channel,
        userId: botEntity,
        adminRights: rights,
        rank: "Bot",
      })
    );
    console.log(`‚úÖ –ù–∞–∑–Ω–∞—á–µ–Ω –∞–¥–º–∏–Ω–æ–º: ${username}`);
  } catch (e) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –¥–ª—è ${username}:`, e.message);
  }
}


  

  // for (const botId of botIds) {
  //   try {
  //     await client.invoke(
  //       new Api.channels.EditAdmin({
  //         channel: channel,
  //         userId: botId,
  //         adminRights: rights,
  //         rank: "Bot",
  //       })
  //     );
  //     console.log(`‚úÖ –ù–∞–∑–Ω–∞—á–µ–Ω –∞–¥–º–∏–Ω–æ–º: ${botId}`);
  //   } catch (e) {
  //     console.error(`‚ùå –û—à–∏–±–∫–∞ –¥–ª—è ${botId}:`, e.message);
  //   }
  // }
  //
  process.exit(0);
})();
